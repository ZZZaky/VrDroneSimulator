//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/FDS/General/Controls/DronePlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DronePlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DronePlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DronePlayerInput"",
    ""maps"": [
        {
            ""name"": ""Drone"",
            ""id"": ""f0f8556d-af0a-42e6-a536-0e23d3b9cd95"",
            ""actions"": [
                {
                    ""name"": ""ForwardAxis"",
                    ""type"": ""Value"",
                    ""id"": ""3836af67-bb85-4a6e-a77c-5d671496448b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotationAxis"",
                    ""type"": ""Value"",
                    ""id"": ""5226ecc7-906c-4df4-919f-5d9ba314bd4a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightAxis"",
                    ""type"": ""Value"",
                    ""id"": ""f1f1792d-3858-47dd-b9f0-0e0ce3eeef2a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UpAxis"",
                    ""type"": ""Value"",
                    ""id"": ""0dfd326a-4d0b-434e-9f03-93eeb2ab5ffa"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ChangeMode"",
                    ""type"": ""Value"",
                    ""id"": ""84cae3c1-f830-4622-951a-33482f7fb521"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UpVector2"",
                    ""type"": ""Value"",
                    ""id"": ""db31f832-636e-47d7-bf5d-9ea1883efa33"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotationVector2"",
                    ""type"": ""Value"",
                    ""id"": ""ead8f864-5f7d-43f5-abdd-827eb776fc99"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ForwardVector2"",
                    ""type"": ""Value"",
                    ""id"": ""e1ee583e-f84c-476e-9dc3-81ceaf5e4e00"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightVector2"",
                    ""type"": ""Value"",
                    ""id"": ""7478e5e7-deed-44a9-a2c7-94826c263aa3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fb91df7f-885d-4570-9205-346e9b4da5d8"",
                    ""path"": ""<HID::OpenTX RM TX16S Joystick>/stick/y"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": """",
                    ""action"": ""ForwardAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""887780b6-c02b-4a5f-af76-764d0e2bd444"",
                    ""path"": ""<HID::OpenTX RM TX16S Joystick>/stick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e63413c1-c277-4685-84e9-5492ecbc7023"",
                    ""path"": ""<HID::OpenTX RM TX16S Joystick>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66d5f368-8a67-4ece-8054-89627113b7f7"",
                    ""path"": ""<HID::OpenTX RM TX16S Joystick>/rx"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationAxis"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""ae6792e6-2218-4d27-81b4-66acb2095d71"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeMode"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""cb153367-3063-4e76-bfd4-3bbb89e48513"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""fd2e5e6f-2fc5-464d-b400-1cb7c2280c79"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""20643cf2-563c-416b-80de-3fb6bd87fc4b"",
                    ""path"": ""<HID::OpenTX RM TX16S Joystick>/rz"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""340d1b68-d914-4e38-974e-25c68858f3a0"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeMode"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""8fa3c0fd-4430-4176-9e02-f407f8a79ec4"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c3626c5a-1bb1-4eac-8e3d-381f9e73e681"",
                    ""path"": ""<XRController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""eeb314fc-7dd2-46be-8747-8663992b5879"",
                    ""path"": ""<XRController>{LeftHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""172658e0-7fa0-4ca0-9e36-5cb4785865dc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpVector2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a87d4596-3d4a-4c2e-ad2e-bdac4cb4eeb3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1aa8d175-bca7-4d77-9f08-c354f04c1794"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""040f3d78-3261-4e8e-ad8e-30f34d579f65"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d1fa4e76-4fcf-4f75-93ff-b959a4ca8722"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2b500e15-2886-4167-a915-3d7fe6b96971"",
                    ""path"": ""<XRController>{LeftHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""359f2e4d-5584-40ff-bb95-4ecac06e0f96"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationVector2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""57cae64c-971d-442d-be20-d52f7a0640e0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f7737f7a-42e3-43d6-ac5a-9c79271ade6a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7be9844d-d778-48e6-82b3-f8a3325ecb17"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7828ef78-8201-4438-b97d-d77f936b69b5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotationVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""81b82afa-3fa1-4233-91a4-60db712e9fee"",
                    ""path"": ""<XRController>{RightHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""eea00e48-3ce8-45f6-acbc-1851db092fe5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardVector2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""081419f8-e741-4700-831b-24d4a7710c9b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b620e712-4f89-43e7-9365-9b52f3eaba8f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9f2d2f23-015a-4739-b8a3-9005f0c9ef18"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ed428974-e773-42c9-bcf7-82c35ea47c81"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f65306a3-9edf-4e14-b0a4-3f6d29e15bbb"",
                    ""path"": ""<XRController>{RightHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""ba7ee7c6-7c49-4b72-a2b1-23c38fd87db5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightVector2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4a149b7f-e1e5-4b96-a2c6-f389f4f01df3"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""71ccde2d-b8fb-4a0d-94bc-1183f81331b5"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ebcfb290-42bf-4f27-afa6-21e977f955d6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d5498d72-3bbc-46ff-985a-d10992b4d101"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""General"",
            ""id"": ""eb3df867-55e1-44ec-aa23-7c0caed85554"",
            ""actions"": [
                {
                    ""name"": ""ShowSetup"",
                    ""type"": ""Button"",
                    ""id"": ""e18c27a1-30ef-4dec-9cce-afc50f10d071"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectMovement"",
                    ""type"": ""Button"",
                    ""id"": ""b3a528f1-5478-4d31-9d20-5e510ad33e0f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowSettings"",
                    ""type"": ""Button"",
                    ""id"": ""4e8e2c74-7ed1-4e7c-8c58-d74bd149a22b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""10ed32ec-dddb-43a9-872e-2f462e49a042"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShowSetup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8ffd13c-3214-4bfa-9a8b-496a4709306e"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a730178e-0b99-429f-bb8f-767fdce41c14"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShowSettings"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Drone
        m_Drone = asset.FindActionMap("Drone", throwIfNotFound: true);
        m_Drone_ForwardAxis = m_Drone.FindAction("ForwardAxis", throwIfNotFound: true);
        m_Drone_RotationAxis = m_Drone.FindAction("RotationAxis", throwIfNotFound: true);
        m_Drone_RightAxis = m_Drone.FindAction("RightAxis", throwIfNotFound: true);
        m_Drone_UpAxis = m_Drone.FindAction("UpAxis", throwIfNotFound: true);
        m_Drone_ChangeMode = m_Drone.FindAction("ChangeMode", throwIfNotFound: true);
        m_Drone_UpVector2 = m_Drone.FindAction("UpVector2", throwIfNotFound: true);
        m_Drone_RotationVector2 = m_Drone.FindAction("RotationVector2", throwIfNotFound: true);
        m_Drone_ForwardVector2 = m_Drone.FindAction("ForwardVector2", throwIfNotFound: true);
        m_Drone_RightVector2 = m_Drone.FindAction("RightVector2", throwIfNotFound: true);
        // General
        m_General = asset.FindActionMap("General", throwIfNotFound: true);
        m_General_ShowSetup = m_General.FindAction("ShowSetup", throwIfNotFound: true);
        m_General_SelectMovement = m_General.FindAction("SelectMovement", throwIfNotFound: true);
        m_General_ShowSettings = m_General.FindAction("ShowSettings", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Drone
    private readonly InputActionMap m_Drone;
    private List<IDroneActions> m_DroneActionsCallbackInterfaces = new List<IDroneActions>();
    private readonly InputAction m_Drone_ForwardAxis;
    private readonly InputAction m_Drone_RotationAxis;
    private readonly InputAction m_Drone_RightAxis;
    private readonly InputAction m_Drone_UpAxis;
    private readonly InputAction m_Drone_ChangeMode;
    private readonly InputAction m_Drone_UpVector2;
    private readonly InputAction m_Drone_RotationVector2;
    private readonly InputAction m_Drone_ForwardVector2;
    private readonly InputAction m_Drone_RightVector2;
    public struct DroneActions
    {
        private @DronePlayerInput m_Wrapper;
        public DroneActions(@DronePlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ForwardAxis => m_Wrapper.m_Drone_ForwardAxis;
        public InputAction @RotationAxis => m_Wrapper.m_Drone_RotationAxis;
        public InputAction @RightAxis => m_Wrapper.m_Drone_RightAxis;
        public InputAction @UpAxis => m_Wrapper.m_Drone_UpAxis;
        public InputAction @ChangeMode => m_Wrapper.m_Drone_ChangeMode;
        public InputAction @UpVector2 => m_Wrapper.m_Drone_UpVector2;
        public InputAction @RotationVector2 => m_Wrapper.m_Drone_RotationVector2;
        public InputAction @ForwardVector2 => m_Wrapper.m_Drone_ForwardVector2;
        public InputAction @RightVector2 => m_Wrapper.m_Drone_RightVector2;
        public InputActionMap Get() { return m_Wrapper.m_Drone; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DroneActions set) { return set.Get(); }
        public void AddCallbacks(IDroneActions instance)
        {
            if (instance == null || m_Wrapper.m_DroneActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DroneActionsCallbackInterfaces.Add(instance);
            @ForwardAxis.started += instance.OnForwardAxis;
            @ForwardAxis.performed += instance.OnForwardAxis;
            @ForwardAxis.canceled += instance.OnForwardAxis;
            @RotationAxis.started += instance.OnRotationAxis;
            @RotationAxis.performed += instance.OnRotationAxis;
            @RotationAxis.canceled += instance.OnRotationAxis;
            @RightAxis.started += instance.OnRightAxis;
            @RightAxis.performed += instance.OnRightAxis;
            @RightAxis.canceled += instance.OnRightAxis;
            @UpAxis.started += instance.OnUpAxis;
            @UpAxis.performed += instance.OnUpAxis;
            @UpAxis.canceled += instance.OnUpAxis;
            @ChangeMode.started += instance.OnChangeMode;
            @ChangeMode.performed += instance.OnChangeMode;
            @ChangeMode.canceled += instance.OnChangeMode;
            @UpVector2.started += instance.OnUpVector2;
            @UpVector2.performed += instance.OnUpVector2;
            @UpVector2.canceled += instance.OnUpVector2;
            @RotationVector2.started += instance.OnRotationVector2;
            @RotationVector2.performed += instance.OnRotationVector2;
            @RotationVector2.canceled += instance.OnRotationVector2;
            @ForwardVector2.started += instance.OnForwardVector2;
            @ForwardVector2.performed += instance.OnForwardVector2;
            @ForwardVector2.canceled += instance.OnForwardVector2;
            @RightVector2.started += instance.OnRightVector2;
            @RightVector2.performed += instance.OnRightVector2;
            @RightVector2.canceled += instance.OnRightVector2;
        }

        private void UnregisterCallbacks(IDroneActions instance)
        {
            @ForwardAxis.started -= instance.OnForwardAxis;
            @ForwardAxis.performed -= instance.OnForwardAxis;
            @ForwardAxis.canceled -= instance.OnForwardAxis;
            @RotationAxis.started -= instance.OnRotationAxis;
            @RotationAxis.performed -= instance.OnRotationAxis;
            @RotationAxis.canceled -= instance.OnRotationAxis;
            @RightAxis.started -= instance.OnRightAxis;
            @RightAxis.performed -= instance.OnRightAxis;
            @RightAxis.canceled -= instance.OnRightAxis;
            @UpAxis.started -= instance.OnUpAxis;
            @UpAxis.performed -= instance.OnUpAxis;
            @UpAxis.canceled -= instance.OnUpAxis;
            @ChangeMode.started -= instance.OnChangeMode;
            @ChangeMode.performed -= instance.OnChangeMode;
            @ChangeMode.canceled -= instance.OnChangeMode;
            @UpVector2.started -= instance.OnUpVector2;
            @UpVector2.performed -= instance.OnUpVector2;
            @UpVector2.canceled -= instance.OnUpVector2;
            @RotationVector2.started -= instance.OnRotationVector2;
            @RotationVector2.performed -= instance.OnRotationVector2;
            @RotationVector2.canceled -= instance.OnRotationVector2;
            @ForwardVector2.started -= instance.OnForwardVector2;
            @ForwardVector2.performed -= instance.OnForwardVector2;
            @ForwardVector2.canceled -= instance.OnForwardVector2;
            @RightVector2.started -= instance.OnRightVector2;
            @RightVector2.performed -= instance.OnRightVector2;
            @RightVector2.canceled -= instance.OnRightVector2;
        }

        public void RemoveCallbacks(IDroneActions instance)
        {
            if (m_Wrapper.m_DroneActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDroneActions instance)
        {
            foreach (var item in m_Wrapper.m_DroneActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DroneActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DroneActions @Drone => new DroneActions(this);

    // General
    private readonly InputActionMap m_General;
    private List<IGeneralActions> m_GeneralActionsCallbackInterfaces = new List<IGeneralActions>();
    private readonly InputAction m_General_ShowSetup;
    private readonly InputAction m_General_SelectMovement;
    private readonly InputAction m_General_ShowSettings;
    public struct GeneralActions
    {
        private @DronePlayerInput m_Wrapper;
        public GeneralActions(@DronePlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ShowSetup => m_Wrapper.m_General_ShowSetup;
        public InputAction @SelectMovement => m_Wrapper.m_General_SelectMovement;
        public InputAction @ShowSettings => m_Wrapper.m_General_ShowSettings;
        public InputActionMap Get() { return m_Wrapper.m_General; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GeneralActions set) { return set.Get(); }
        public void AddCallbacks(IGeneralActions instance)
        {
            if (instance == null || m_Wrapper.m_GeneralActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GeneralActionsCallbackInterfaces.Add(instance);
            @ShowSetup.started += instance.OnShowSetup;
            @ShowSetup.performed += instance.OnShowSetup;
            @ShowSetup.canceled += instance.OnShowSetup;
            @SelectMovement.started += instance.OnSelectMovement;
            @SelectMovement.performed += instance.OnSelectMovement;
            @SelectMovement.canceled += instance.OnSelectMovement;
            @ShowSettings.started += instance.OnShowSettings;
            @ShowSettings.performed += instance.OnShowSettings;
            @ShowSettings.canceled += instance.OnShowSettings;
        }

        private void UnregisterCallbacks(IGeneralActions instance)
        {
            @ShowSetup.started -= instance.OnShowSetup;
            @ShowSetup.performed -= instance.OnShowSetup;
            @ShowSetup.canceled -= instance.OnShowSetup;
            @SelectMovement.started -= instance.OnSelectMovement;
            @SelectMovement.performed -= instance.OnSelectMovement;
            @SelectMovement.canceled -= instance.OnSelectMovement;
            @ShowSettings.started -= instance.OnShowSettings;
            @ShowSettings.performed -= instance.OnShowSettings;
            @ShowSettings.canceled -= instance.OnShowSettings;
        }

        public void RemoveCallbacks(IGeneralActions instance)
        {
            if (m_Wrapper.m_GeneralActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGeneralActions instance)
        {
            foreach (var item in m_Wrapper.m_GeneralActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GeneralActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GeneralActions @General => new GeneralActions(this);
    public interface IDroneActions
    {
        void OnForwardAxis(InputAction.CallbackContext context);
        void OnRotationAxis(InputAction.CallbackContext context);
        void OnRightAxis(InputAction.CallbackContext context);
        void OnUpAxis(InputAction.CallbackContext context);
        void OnChangeMode(InputAction.CallbackContext context);
        void OnUpVector2(InputAction.CallbackContext context);
        void OnRotationVector2(InputAction.CallbackContext context);
        void OnForwardVector2(InputAction.CallbackContext context);
        void OnRightVector2(InputAction.CallbackContext context);
    }
    public interface IGeneralActions
    {
        void OnShowSetup(InputAction.CallbackContext context);
        void OnSelectMovement(InputAction.CallbackContext context);
        void OnShowSettings(InputAction.CallbackContext context);
    }
}
